# Based on c_src.mk from erlang.mk by LoÃƒÂ¯c Hoguin <essen@ninenines.eu>

export PATH := /root/x-tools/arm-plum-linux-gnueabi/bin:$(PATH)

PROJECT ?= enacl_nif

ERTS_INCLUDE_DIR ?= /opt/arm/lib/erlang/erts-6.4.1.2/include
ERL_INTERFACE_INCLUDE_DIR ?= /opt/arm/lib/erlang/lib/erl_interface-3.7.20/include
ERL_INTERFACE_LIB_DIR ?= /opt/arm/lib/erlang/lib/erl_interface-3.7.20/lib

C_SRC_DIR = $(CURDIR)
C_SRC_OUTPUT ?= $(CURDIR)/../priv/$(PROJECT).so

# System type and C compiler/flags.

UNAME_SYS := $(shell uname -s)
ifeq ($(UNAME_SYS), Darwin)
	CC ?= cc
	CFLAGS ?= -O3 -std=c99 -arch x86_64 -finline-functions -Wall -Wmissing-prototypes
	CXXFLAGS ?= -O3 -arch x86_64 -finline-functions -Wall
	LDFLAGS ?= -arch x86_64 -flat_namespace -undefined suppress
else ifeq ($(UNAME_SYS), FreeBSD)
	CC ?= cc
	CFLAGS ?= -O3 -std=c99 -finline-functions -Wall -Wmissing-prototypes -I /usr/local/include
	CXXFLAGS ?= -O3 -finline-functions -Wall
	LDFLAGS ?= -fPIC -L /usr/local/lib
else ifeq ($(UNAME_SYS), Linux)
	CC ?= gcc
	CFLAGS ?= -O3 -std=c99 -finline-functions -Wall -Wmissing-prototypes
	CXXFLAGS ?= -O3 -finline-functions -Wall
endif

CC ?= arm-plum-linux-gnueabi-gcc
CXX ?= arm-plum-linux-gnueabi-cpp

CFLAGS += -fPIC -I $(ERTS_INCLUDE_DIR) -I $(ERL_INTERFACE_INCLUDE_DIR) -I /opt/arm/include
CXXFLAGS += -fPIC -I $(ERTS_INCLUDE_DIR) -I $(ERL_INTERFACE_INCLUDE_DIR)

LDLIBS += -L $(ERL_INTERFACE_LIB_DIR) -L /opt/arm/lib -lerl_interface -lei -lsodium
LDFLAGS += -shared

# Verbosity.

c_verbose_0 = @echo " C     " $(?F);
c_verbose = $(c_verbose_$(V))

cpp_verbose_0 = @echo " CPP   " $(?F);
cpp_verbose = $(cpp_verbose_$(V))

link_verbose_0 = @echo " LD    " $(@F);
link_verbose = $(link_verbose_$(V))

SOURCES := $(shell find $(C_SRC_DIR) -type f \( -name "*.c" -o -name "*.C" -o -name "*.cc" -o -name "*.cpp" \))
OBJECTS = $(addsuffix .o, $(basename $(SOURCES)))

COMPILE_C = $(c_verbose) arm-plum-linux-gnueabi-gcc $(CFLAGS) $(CPPFLAGS) -c
COMPILE_CPP = $(cpp_verbose) arm-plum-linux-gnueabi-cpp $(CXXFLAGS) $(CPPFLAGS) -c

$(C_SRC_OUTPUT): $(OBJECTS)
	$(link_verbose) arm-plum-linux-gnueabi-gcc $(OBJECTS) $(LDFLAGS) $(LDLIBS) -o $(C_SRC_OUTPUT)

%.o: %.c
	$(COMPILE_C) $(OUTPUT_OPTION) $<

%.o: %.cc
	$(COMPILE_CPP) $(OUTPUT_OPTION) $<

%.o: %.C
	$(COMPILE_CPP) $(OUTPUT_OPTION) $<

%.o: %.cpp
	$(COMPILE_CPP) $(OUTPUT_OPTION) $<

clean:
	@rm $(C_SRC_OUTPUT) $(OBJECTS)
